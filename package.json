{
	"name": "lsp-sample",
	"description": "A language server example",
	"author": "Microsoft Corporation",
	"license": "MIT",
	"version": "1.0.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-extension-samples"
	},
	"publisher": "vscode-samples",
	"categories": [],
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.36.0"
	},
	"activationEvents": [
		"onLanguage:plaintext",
		"onLanguage:html",
		"onLanguage:au",
		"onCommand:extension.auNew",
		"onCommand:extension.auGenerate",
		"onCommand:extension.auTest",
		"onCommand:extension.auBuild",
		"onCommand:extension.auRun",
		"onCommand:extension.auRunWatch",
		"onCommand:extension.auOpenRelated",
		"onCommand:aurelia.showViewProperties"
	],
	"main": "./client/out/extension",
	"contributes": {
		"languages": [
      {
        "id": "html",
        "order": 1,
        "extensions": [
          ".html",
          ".htm",
          ".shtml",
          ".xhtml",
          ".mdoc",
          ".jsp",
          ".asp",
          ".aspx",
          ".jshtm",
          ".volt",
          ".ejs",
          ".au"
        ],
        "aliases": [
          "HTML",
          "htm",
          "html",
          "xhtml"
        ],
        "mimetypes": [
          "text/html",
          "text/x-jshtm",
          "text/template",
          "text/ng-template",
          "application/xhtml+xml"
        ],
        "embeddedLanguages": {
          "text.html": "html",
          "source.css": "css",
          "source.js": "javascript",
          "source.python": "python",
          "source.smarty": "smarty"
        },
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "html",
        "scopeName": "au.html",
        "path": "./syntaxes/html.json"
      }
    ],
    "folding": {
      "markers": {
        "start": "^\\s*<!--\\s*#region\\b\\s*(.*?)-->/",
        "end": "^\\s*<!--\\s*#endregion\\b\\s*(.*?)-->/"
      }
    },
    "commands": [
      {
        "command": "extension.auNew",
        "title": "au new"
      },
      {
        "command": "extension.auGenerate",
        "title": "au generate"
      },
      {
        "command": "extension.auBuild",
        "title": "au build"
      },
      {
        "command": "extension.auTest",
        "title": "au test"
      },
      {
        "command": "extension.auRun",
        "title": "au run"
      },
      {
        "command": "extension.auRunWatch",
        "title": "au run --watch"
      },
      {
        "command": "extension.auOpenRelated",
        "title": "Open Related Aurelia File"
      },
      {
        "command": "aurelia.showViewProperties",
        "title": "Show Aurelia view data to side"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "aurelia.showViewProperties",
          "when": "resourceLangId == html"
        }
      ]
    },
		"configuration": {
			"id": "aurelia",
			"type": "object",
			"title": "Example Aurelia configuration",
			"properties": {
				"aurelia.autocomplete.quotes": {
          "type": "string",
          "enum": [
            "single",
            "double"
          ],
          "default": "double",
          "description": "Quotes to use when performing an autocomplete action"
        },
        "aurelia.validation": {
          "type": "boolean",
          "default": "true",
          "description": "Enable Aurelia validations"
        },
        "aurelia.featureToggles": {
          "type": "object",
          "description": "enable beta features",
          "default": {
            "smartAutocomplete": false
          }
        },
        "aurelia.autocomplete.bindings.data": {
          "type": "array",
          "description": "Auto complete options to provide on data bindings",
          "default": [
            {
              "name": "bind",
              "documentation": "automatically chooses the binding mode. Uses two-way binding for form controls and to-view/one-way binding for almost everything else"
            },
            {
              "name": "to-view",
              "documentation": "flows data one direction: from the view-model to the view"
            },
            {
              "name": "one-way",
              "documentation": "[deprecated, use to-view instead] flows data one direction: from the view-model to the view",
              "label": ".one-way='' [deprecated]"
            },
            {
              "name": "from-view",
              "documentation": "flows data one direction: from the view to the view-model"
            },
            {
              "name": "two-way",
              "documentation": "flows data both ways: from view-model to view and from view to view-model"
            },
            {
              "name": "one-time",
              "documentation": "flows data one direction: from the view-model to the view, once"
            }
          ]
        },
				"languageServerExample.maxNumberOfProblems": {
					"scope": "resource",
					"type": "number",
					"default": 100,
					"description": "Controls the maximum number of problems produced by the server."
				},
				"languageServerExample.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VS Code and the language server."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "cd client && npm run update-vscode && cd .. && npm run compile",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"test": "sh ./scripts/e2e.sh"
	},
	"devDependencies": {
		"@types/mocha": "^5.2.0",
		"@types/node": "^8.0.0",
		"tslint": "^5.16.0",
		"typescript": "^3.5.1"
	}
}
